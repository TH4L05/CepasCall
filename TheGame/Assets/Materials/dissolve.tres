[gd_resource type="ShaderMaterial" load_steps=15 format=2]

[sub_resource type="VisualShaderNodeColorConstant" id=1]
output_port_for_preview = 0
constant = Color( 0.0898438, 0.0898438, 0.0898438, 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=2]
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=3]
output_port_for_preview = 0
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=4]
output_port_for_preview = 0
function = 15

[sub_resource type="VisualShaderNodeVectorOp" id=5]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id=6]
constant = Color( 0.457031, 0.0142822, 0.0142822, 1 )

[sub_resource type="VisualShaderNodeScalarUniform" id=7]
uniform_name = "dissolve"

[sub_resource type="VisualShaderNodeInput" id=8]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="OpenSimplexNoise" id=9]

[sub_resource type="NoiseTexture" id=10]
width = 258
height = 258
seamless = true
noise = SubResource( 9 )

[sub_resource type="VisualShaderNodeTexture" id=11]
texture = SubResource( 10 )

[sub_resource type="VisualShaderNodeScalarOp" id=12]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=13]
output_port_for_preview = 0
function = 15

[sub_resource type="VisualShader" id=14]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, cull_disabled, diffuse_burley, specular_schlick_ggx;

uniform sampler2D tex_frg_7;
uniform float dissolve;



void vertex() {
// Output:0

}

void fragment() {
// Color:10
	vec3 n_out10p0 = vec3(0.089844, 0.089844, 0.089844);
	float n_out10p1 = 1.000000;

// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// Texture:7
	vec4 tex_frg_7_read = texture(tex_frg_7, n_out2p0.xy);
	vec3 n_out7p0 = tex_frg_7_read.rgb;
	float n_out7p1 = tex_frg_7_read.a;

// ScalarUniform:16
	float n_out16p0 = dissolve;

// ScalarOp:8
	float n_out8p0 = dot(n_out7p0, vec3(0.333333, 0.333333, 0.333333)) - n_out16p0;

// ScalarFunc:9
	float n_out9p0 = round(n_out8p0);

// Output:0
	ALBEDO = n_out10p0;
	ALPHA = n_out9p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -326, -186 )
modes/cull = 2
modes/depth_draw = 3
modes/diffuse = 3
nodes/fragment/0/position = Vector2( 1340, 140 )
nodes/fragment/2/node = SubResource( 8 )
nodes/fragment/2/position = Vector2( 40, 20 )
nodes/fragment/7/node = SubResource( 11 )
nodes/fragment/7/position = Vector2( 240, -80 )
nodes/fragment/8/node = SubResource( 12 )
nodes/fragment/8/position = Vector2( 460, 120 )
nodes/fragment/9/node = SubResource( 13 )
nodes/fragment/9/position = Vector2( 660, 120 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 660, -80 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 560, 360 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( 740, 360 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( 920, 300 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( 1140, 260 )
nodes/fragment/15/node = SubResource( 6 )
nodes/fragment/15/position = Vector2( 960, 500 )
nodes/fragment/16/node = SubResource( 7 )
nodes/fragment/16/position = Vector2( 120, 240 )
nodes/fragment/connections = PoolIntArray( 2, 0, 7, 0, 7, 0, 8, 0, 8, 0, 9, 0, 9, 0, 0, 1, 10, 0, 0, 0, 8, 0, 11, 0, 11, 0, 12, 1, 12, 0, 13, 0, 13, 0, 14, 0, 15, 0, 14, 1, 16, 0, 8, 1 )

[resource]
shader = SubResource( 14 )
shader_param/dissolve = null
