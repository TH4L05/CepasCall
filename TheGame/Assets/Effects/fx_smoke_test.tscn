[gd_scene load_steps=23 format=2]

[sub_resource type="Gradient" id=1]
offsets = PoolRealArray( 0, 0.266667 )
colors = PoolColorArray( 0.207031, 0.199753, 0.205553, 1, 0.0234375, 0.00814819, 0.0221236, 1 )

[sub_resource type="GradientTexture" id=2]
gradient = SubResource( 1 )

[sub_resource type="Curve" id=3]
_data = [ Vector2( 0, 0 ), 0.0, 22.2636, 0, 0, Vector2( 0.107595, 0.986364 ), 1.04013, 1.04013, 0, 0, Vector2( 0.765823, 0.504545 ), -1.96835, -1.96835, 0, 0, Vector2( 1, 0.00681818 ), -2.23833, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=4]
curve = SubResource( 3 )

[sub_resource type="ParticlesMaterial" id=5]
emission_shape = 1
emission_sphere_radius = 0.28
direction = Vector3( 0, 1, 0 )
spread = 0.0
gravity = Vector3( 0, 1, 0 )
initial_velocity = 0.2
angular_velocity = 360.0
angular_velocity_random = 1.0
linear_accel = 0.1
scale = 0.07
scale_random = 0.83
scale_curve = SubResource( 4 )
color_ramp = SubResource( 2 )

[sub_resource type="VisualShaderNodeScalarOp" id=6]
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=7]
output_port_for_preview = 0
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=8]
output_port_for_preview = 0
function = 15

[sub_resource type="VisualShaderNodeVectorOp" id=9]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id=10]
constant = Color( 0.375, 0.104152, 0.104152, 1 )

[sub_resource type="VisualShaderNodeInput" id=11]
input_name = "color"

[sub_resource type="VisualShaderNodeInput" id=12]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=13]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=14]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="OpenSimplexNoise" id=15]

[sub_resource type="NoiseTexture" id=16]
width = 258
height = 258
seamless = true
noise = SubResource( 15 )

[sub_resource type="VisualShaderNodeTexture" id=17]
texture = SubResource( 16 )

[sub_resource type="VisualShaderNodeScalarOp" id=18]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=19]
output_port_for_preview = 0
function = 15

[sub_resource type="VisualShader" id=20]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, cull_disabled, specular_schlick_ggx, depth_test_disable, shadows_disabled;

uniform sampler2D tex_frg_7;



void vertex() {
// Output:0

}

void fragment() {
// Input:19
	vec3 n_out19p0 = COLOR.rgb;

// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// Texture:7
	vec4 tex_frg_7_read = texture(tex_frg_7, n_out2p0.xy);
	vec3 n_out7p0 = tex_frg_7_read.rgb;
	float n_out7p1 = tex_frg_7_read.a;

// ScalarFunc:4
	float n_in4p0 = 0.00000;
	float n_out4p0 = sin(n_in4p0);

// ScalarOp:5
	float n_in5p1 = 2.00000;
	float n_out5p0 = n_out4p0 / n_in5p1;

// ScalarOp:8
	float n_out8p0 = dot(n_out7p0, vec3(0.333333, 0.333333, 0.333333)) - n_out5p0;

// ScalarFunc:9
	float n_out9p0 = round(n_out8p0);

// Output:0
	ALBEDO = n_out19p0;
	ALPHA = n_out9p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 482, -60 )
modes/cull = 2
modes/depth_draw = 3
flags/depth_test_disable = true
flags/shadows_disabled = true
nodes/fragment/0/position = Vector2( 1340, 140 )
nodes/fragment/2/node = SubResource( 12 )
nodes/fragment/2/position = Vector2( 20, 40 )
nodes/fragment/4/node = SubResource( 13 )
nodes/fragment/4/position = Vector2( -200, 260 )
nodes/fragment/5/node = SubResource( 14 )
nodes/fragment/5/position = Vector2( 80, 260 )
nodes/fragment/7/node = SubResource( 17 )
nodes/fragment/7/position = Vector2( 200, -40 )
nodes/fragment/8/node = SubResource( 18 )
nodes/fragment/8/position = Vector2( 400, 160 )
nodes/fragment/9/node = SubResource( 19 )
nodes/fragment/9/position = Vector2( 640, 120 )
nodes/fragment/11/node = SubResource( 6 )
nodes/fragment/11/position = Vector2( 580, 360 )
nodes/fragment/12/node = SubResource( 7 )
nodes/fragment/12/position = Vector2( 760, 340 )
nodes/fragment/13/node = SubResource( 8 )
nodes/fragment/13/position = Vector2( 940, 280 )
nodes/fragment/14/node = SubResource( 9 )
nodes/fragment/14/position = Vector2( 1160, 280 )
nodes/fragment/15/node = SubResource( 10 )
nodes/fragment/15/position = Vector2( 1000, 520 )
nodes/fragment/19/node = SubResource( 11 )
nodes/fragment/19/position = Vector2( 1000, 0 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 2, 0, 7, 0, 7, 0, 8, 0, 8, 0, 9, 0, 5, 0, 8, 1, 9, 0, 0, 1, 8, 0, 11, 0, 11, 0, 12, 1, 12, 0, 13, 0, 13, 0, 14, 0, 15, 0, 14, 1, 19, 0, 0, 0 )

[sub_resource type="ShaderMaterial" id=21]
shader = SubResource( 20 )

[sub_resource type="SphereMesh" id=22]
material = SubResource( 21 )
radius = 0.5
height = 1.0
radial_segments = 6
rings = 2

[node name="smoke_fx" type="Spatial"]

[node name="Particles2" type="Particles" parent="."]
transform = Transform( 1, -9.31323e-10, 0, 1.86265e-09, 1, -7.45058e-09, -2.98023e-08, -3.72529e-09, 1, -0.0665597, 0.435515, 0.163384 )
amount = 6
lifetime = 2.37
speed_scale = 0.65
visibility_aabb = AABB( -2, -2, -2, 4, 4, 4 )
local_coords = false
process_material = SubResource( 5 )
draw_pass_1 = SubResource( 22 )
